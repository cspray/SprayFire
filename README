         (                            (
         )\ )                         )\ )
        (()/(        (       )  (    (()/(  (   (      (
         /(_))`  )   )(   ( /(  )\ )  /(_)) )\  )(    ))\
        (_))  /(/(  (()\  )(_))(()/( (_))_|((_)(()\  /((_)
        / __|((_)_\  ((_)((_)_  )(_))| |_   (_) ((_)(_))
        \__ \| '_ \)| '_|/ _` || || || __|  | || '_|/ -_)
        |___/| .__/ |_|  \__,_| \_, ||_|    |_||_|  \___|
             |_|                |__/

SprayFire is a PHP framework designed to seperate the concerns of web development, provide built-in SQL injection security with the use of prepared statement and escape output passed to the View to prevent XSS.  SprayFire is intended to be a lightweight, configurable framework that allows for an easy workflow throughout the entire website creation process.

SprayFire is targeted toward PHP 5.2+ and MySQL 5+.  Appropriate PHP code is unit-tested to ensure code correctness.

This is the second evolution of SprayFire, with the bulk of the templating engine created in the first generation I had moved on to writing the CRUD functionality and realized that the code was not going to work in its current state.  After reading 'Clean Code' by Robert Martin I re-evaluated the SprayFire codebase and decided it was beyond refactoring the entire thing.  Ultimately, there were several design decisions that, in hindsight, were not the right decisions.  This rewrite is taking place to better practice the rules in 'Clean Code', to rectify the design mistakes in the first generation and to ensure all appropriate classes are unit tested.

The updated wiki for SprayFire will be coming at a future date.

Testing Instructions
================================================================================
Framework objects that can be reasonably unit tested will have those tests stored
in {framework_dir}/tests/.  At the moment all tests have to be run individually,
using the following directions:

1. Ensure PHPUnit is installed and in the include path on your computer.
2. Change directory to {framework_dir}/tests/.
3. Run each test by inputting the following command in your terminal

phpunit --bootstrap test_bootstrap.php {ClassNameTest} /path/to/{ClassNameTest}.php

Please note that there is an AllTests suite that will, well, run all tests.

SprayFire is under development!  The SprayFire development team consists of:
================================================================================

Charles Sprayberry
Lead Developer and Creator
Benevolent Dictator for Life
twitter: @charlesspray
github: cspray/CleanSprayFire